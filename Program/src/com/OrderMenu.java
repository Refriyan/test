/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;

/**
 *
 * @author Kefuoe
 */
public class OrderMenu extends javax.swing.JFrame {

    /**
     * Creates new form OrderMenu
     */
    Connection con;                                //Object to create connection
    Statement stmt;
    PreparedStatement newStock;
    ResultSet rs;
    /* ---------------------------------*/
    String driverName = "com.mysql.jdbc.Driver";   //The mysql driver 
    String DBURL = "jdbc:mysql://localhost:3306/"; //Local mysql Server URL
    String DB = "restaurant";                      //Database server
    String DBUser = "root";                        //Database server username
    String DBPwd = "admin";                             //Database server password
    boolean vcon = false;                          //Connection verification variable
    String[][] records;
    String[] colHeader = {"ID", "CODE", "NAME", "QTY", "PRICE", "IMAGE"};
    DefaultTableModel model;
    ShopingCart cart = new ShopingCart();
    int qty = 1;
    double prix = 0.00, all = 0.00;
    JTableHeader h = null;

    public OrderMenu() {
        initComponents();
        populateJTable();
        //ViewRecords1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public boolean DBConection() {
        try {
            //connect to database
            Class.forName(driverName);
            con = DriverManager.getConnection(DBURL + DB, DBUser, DBPwd);
            if (con.equals(con)) {
                vcon = true;
            }
        } catch (ClassNotFoundException | SQLException ex) {
            // Logger.getLogger(StockOption.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Database Connection failed.", "Entry Error", 1);
        }
        return vcon;
    }

    public void setQty(int qty1) {
        this.qty = qty1;
    }

    public int getQty() {
        return qty;
    }

    public void populateJTable() {
        MyDbQuery mq = new MyDbQuery();
        ArrayList<Stock> list = mq.BindTable();
        Object[][] rows = new Object[list.size()][7];
        for (int i = 0; i < list.size(); i++) {
            rows[i][0] = list.get(i).getID();
            rows[i][1] = list.get(i).getCode();
            rows[i][2] = list.get(i).getName();
            rows[i][3] = getQty();
            rows[i][4] = list.get(i).getPrice();
            //rows[i][5] = list.get(i).getMyImage();

            if (list.get(i).getMyImage() != null) {

                ImageIcon image = new ImageIcon(new ImageIcon(list.get(i).getMyImage()).getImage()
                        .getScaledInstance(150, 120, Image.SCALE_SMOOTH));

                rows[i][5] = image;
            } else {
                rows[i][5] = null;
            }

        }

        GetData model = new GetData(rows, colHeader);
        jTable1.setModel(model);
        jTable1.setRowHeight(120);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
        h = jTable1.getTableHeader();
        h.setForeground(Color.BLUE);
        h.setFont(new Font("Tahome", Font.BOLD, 14));
        ((DefaultTableCellRenderer) h.getDefaultRenderer()).setHorizontalAlignment(javax.swing.JLabel.CENTER);
    }

    // Display Data In JTable: 
    //      1 - Fill ArrayList With The Data
    public ArrayList<Stock> getProductList() {
        ArrayList<Stock> productList = new ArrayList<Stock>();
        //  Connection con = getConnection();
        String query = "SELECT * FROM stock";
        Statement st;
        ResultSet rs;
        try {
            st = (Statement) con.createStatement();
            rs = st.executeQuery(query);
            Stock product;
            while (rs.next()) {
                product = new Stock(
                        rs.getInt("id"),
                        rs.getInt("code"),
                        rs.getString("name"),
                        rs.getInt("qty"),
                        rs.getBigDecimal("price"),
                        rs.getBytes("image"));
                productList.add(product);
            }

        } catch (SQLException ex) {
            Logger.getLogger(StockOption.class.getName()).log(Level.SEVERE, null, ex);
        }

        return productList;

    }

    public boolean addToList() {
        TableModel model1 = jTable1.getModel();
        int[] indexs = jTable1.getSelectedRows();
        Object[] row = new Object[6];

        DefaultTableModel model2 = (DefaultTableModel) cart.jTable2.getModel();
        for (int i = 0; i < indexs.length; i++) {
            row[0] = model1.getValueAt(indexs[i], 0);
            row[1] = model1.getValueAt(indexs[i], 1);
            row[2] = model1.getValueAt(indexs[i], 2);
            row[3] = model1.getValueAt(indexs[i], 3);
            row[4] = model1.getValueAt(indexs[i], 4);
            //BigDecimal g = BigDecimal.valueOf(getQty()* (Integer.parseInt("" + model1.getValueAt(indexs[i], 4))));
            row[5] = model1.getValueAt(indexs[i], 4);
            model2.addRow(row);
            cart.s += "(" + model1.getValueAt(indexs[i], 2) + " x " + model1.getValueAt(indexs[i], 3) + "),";
            // cart. calculate(cart.jTable2, 4, cart.jTable2.getSelectedRows());
            cart.txtCost.setText("" + cart.result);
        }
        cart.setVisible(true);
        cart.txtID.setEnabled(false);

        cart.jLabel6.setEnabled(false);
        cart.jButton4.setEnabled(false);

        this.dispose();
        return true;
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CUSTOMER MENU", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 18), new java.awt.Color(0, 51, 255))); // NOI18N

        jTable1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 12), new java.awt.Color(0, 51, 255))); // NOI18N
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setGridColor(new java.awt.Color(0, 51, 204));
        jTable1.setOpaque(false);
        jTable1.setSelectionBackground(new java.awt.Color(0, 153, 51));
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cart/cart_edit.png"))); // NOI18N
        jButton1.setText("Select Item To add to cart");
        jButton1.setBorder(new javax.swing.border.MatteBorder(null));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cart/cart_delete.png"))); // NOI18N
        jButton2.setText("Order Canciling");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1012, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton2)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        // addToList();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        addToList();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        cart.txtTableNo.setEnabled(false);
        cart.txtCID.setEnabled(true);
        cart.txtCost.setEnabled(false);
        cart.jLabel1.setEnabled(false);
        cart.jLabel2.setEnabled(false);
        cart.jLabel5.setEnabled(false);
        cart.jLabel6.setEnabled(true);
        cart.jButton1.setEnabled(false);
        cart.jTable2.setEnabled(false);
        cart.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
